<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EFCorePeliculas</name>
    </assembly>
    <members>
        <member name="M:EFCorePeliculas.Controllers.ActoresController.GetSelect">
            <summary>
            Usamos la condicion Select para traer solo los campos requeridos
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.ActoresController.GetAutoMapper">
            <summary>
            Usamos Autommaper para mappear la clase ActorDTO a Actor 
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.CinesController.Get">
            <summary>
            v44 Configurando la Latitud y Longitud para poder visualizarlo
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.CinesController.GetCercano(System.Double,System.Double)">
            <summary>
            v45 Buscamos los cines mas cercanos segun parametros de latitud y longitud..
            A la distancia mas corta de 2km
            </summary>
            <param name="latitud"></param>
            <param name="longitud"></param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.CinesController.PostCineCineOferta">
            <summary>
            Insertando registro con data relacionada quemada
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.CinesController.Post(EFCorePeliculas.DTOs.CineCreacionDTO)">
            <summary>
            v62 Creacion de un modelo con DTO. Se realiza la inserccion a multiples tablas relacionadas
            </summary>
            <param name="cineCreacionDTO"></param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.GenerosController.Get">
            <summary>
            Trae todos los Generos
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.GenerosController.GetGeneroPorId(System.Int32)">
            <summary>
            Trae el genero por el id
            </summary>
            <param name="id">Id del genero a buscar</param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.GenerosController.Filtrar(System.String)">
            <summary>
            Buscamos generos que contengan la palabra o letra ingresada.
            Ordenados por Nombre Ascendente
            </summary>
            <param name="nombre"></param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.GenerosController.GetPaginacion(System.Int32)">
            <summary>
            Paginando con Take v41
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.GenerosController.GetEmpiezaCon(System.String)">
            <summary>
            Genero que empieza con la letra ingresada
            </summary>
            <param name="letra"></param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.GenerosController.GetFinalizaCon(System.String)">
            <summary>
            Genero que finaliza con la letra ingresada
            </summary>
            <param name="letra"></param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.GenerosController.Post(EFCorePeliculas.Entidades.Genero)">
            <summary>
            v58 Como funciona el estado desde codigo
            </summary>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.GenerosController.Post(EFCorePeliculas.Entidades.Genero[])">
            <summary>
            v 61 Insertar varios registros al mismo tiempo
            </summary>
            <param name="generos"></param>
            <returns></returns>
            
        </member>
        <member name="M:EFCorePeliculas.Controllers.PeliculasController.GetPorInclude(System.Int32)">
            <summary>
            v46-47 Traer data relacionada con Eager Loading
            Se corrige el problema de traer un campo tipo Point de la clase Cine
            v48 Se organiza el genero de forma Descendente.
            v48 Se optiene los actores mayores a 1980
            </summary>
            <param name="id">Id a buscar</param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.PeliculasController.GetProjectTo(System.Int32)">
            <summary>
            v49 Se usa ProjectTo para carga de datos.
            Tambien toca configurar el AutoMapper para que pueda funcionar
            </summary>
            <param name="id">Id a buscar</param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.PeliculasController.GetSelectivo(System.Int32)">
            <summary>
            v50 Obtener valores por metodo Select
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.PeliculasController.GetExplicito(System.Int32)">
            <summary>
            Carga de forma explicita
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.PeliculasController.GetAgrupadasPorCarteleras">
            <summary>
            Agrupadas si estan en carteleraa o no
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.PeliculasController.GetAgrupadasPorCantidadDeGeneros">
            <summary>
            v54 Agrupadas por cantidad de generos
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFCorePeliculas.Controllers.PeliculasController.Filtrar(EFCorePeliculas.DTOs.PeliculasFiltroDTO)">
            <summary>
            v55 Ejecucion diferida
            </summary>
            <param name="peliculasFiltroDTO"></param>
            <returns></returns>
        </member>
        <member name="T:EFCorePeliculas.Migrations.Firts">
            <inheritdoc />
        </member>
        <member name="M:EFCorePeliculas.Migrations.Firts.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:EFCorePeliculas.Migrations.Firts.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:EFCorePeliculas.Migrations.Firts.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:EFCorePeliculas.Migrations.datosDePrueba">
            <inheritdoc />
        </member>
        <member name="M:EFCorePeliculas.Migrations.datosDePrueba.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:EFCorePeliculas.Migrations.datosDePrueba.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:EFCorePeliculas.Migrations.datosDePrueba.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
